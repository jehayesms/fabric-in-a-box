{
  "properties": {
    "activities": [
      {
        "name": "Set pipelinestarttime",
        "type": "SetVariable",
        "dependsOn": [],
        "policy": {
          "secureOutput": false,
          "secureInput": false
        },
        "typeProperties": {
          "variableName": "pipelinestarttime",
          "value": {
            "value": "@utcNow()",
            "type": "Expression"
          }
        }
      },
      {
        "name": "check load type - full or incremental",
        "type": "IfCondition",
        "dependsOn": [
          {
            "activity": "Set pipelinestarttime",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ],
        "typeProperties": {
          "expression": {
            "value": "@equals(pipeline().parameters.item.loadtype,'full')",
            "type": "Expression"
          },
          "ifFalseActivities": [
            {
              "name": "Load incremental vis Stored Proc",
              "type": "Lookup",
              "dependsOn": [],
              "policy": {
                "timeout": "0.12:00:00",
                "retry": 0,
                "retryIntervalInSeconds": 30,
                "secureOutput": false,
                "secureInput": false
              },
              "typeProperties": {
                "source": {
                  "type": "DataWarehouseSource",
                  "sqlReaderStoredProcedureName": {
                    "value": "@{pipeline().parameters.item.storedprocschema}.@{pipeline().parameters.item.storedprocname}",
                    "type": "Expression"
                  },
                  "storedProcedureParameters": {
                    "StartDate": {
                      "type": "Datetime",
                      "value": {
                        "value": "@pipeline().parameters.item.sourcestartdate",
                        "type": "Expression"
                      }
                    },
                    "EndDate": {
                      "type": "Datetime",
                      "value": {
                        "value": "@pipeline().parameters.item.sourceenddate",
                        "type": "Expression"
                      }
                    }
                  },
                  "queryTimeout": "02:00:00",
                  "partitionOption": "None"
                },
                "datasetSettings": {
                  "annotations": [],
                  "linkedService": {
                    "name": "dw_world_wide_importers",
                    "properties": {
                      "annotations": [],
                      "type": "DataWarehouse",
                      "typeProperties": {
                        "endpoint": "x6eps4xrq2xudenlfv6naeo3i4-7674mglzen3ebawzmfdtdextfy.msit-datawarehouse.fabric.microsoft.com",
                        "artifactId": "3304be96-1d91-45e8-abb7-09bd38609e21",
                        "workspaceId": "19c6bfff-2379-4076-82d9-61473192f32e"
                      }
                    }
                  },
                  "type": "DataWarehouseTable",
                  "schema": [],
                  "typeProperties": {}
                }
              }
            },
            {
              "name": "Set pipelineendtime incr",
              "type": "SetVariable",
              "dependsOn": [
                {
                  "activity": "Load incremental vis Stored Proc",
                  "dependencyConditions": [
                    "Succeeded"
                  ]
                }
              ],
              "policy": {
                "secureOutput": false,
                "secureInput": false
              },
              "typeProperties": {
                "variableName": "pipelineendtime",
                "value": {
                  "value": "@utcnow()",
                  "type": "Expression"
                }
              }
            },
            {
              "name": "update pipeline run details incr",
              "type": "Script",
              "dependsOn": [
                {
                  "activity": "Set pipelineendtime incr",
                  "dependencyConditions": [
                    "Succeeded"
                  ]
                }
              ],
              "policy": {
                "timeout": "0.12:00:00",
                "retry": 2,
                "retryIntervalInSeconds": 30,
                "secureOutput": false,
                "secureInput": false
              },
              "linkedService": {
                "name": "dw_world_wide_importers",
                "objectId": "3304be96-1d91-45e8-abb7-09bd38609e21",
                "properties": {
                  "annotations": [],
                  "type": "DataWarehouse",
                  "typeProperties": {
                    "endpoint": "x6eps4xrq2xudenlfv6naeo3i4-7674mglzen3ebawzmfdtdextfy.msit-datawarehouse.fabric.microsoft.com",
                    "artifactId": "3304be96-1d91-45e8-abb7-09bd38609e21",
                    "workspaceId": "19c6bfff-2379-4076-82d9-61473192f32e"
                  }
                }
              },
              "typeProperties": {
                "scripts": [
                  {
                    "type": "NonQuery",
                    "text": {
                      "value": "UPDATE metadata.MirroredWWItoDW set batchloaddatetime = '@{pipeline().parameters.batchloaddatetime}', sinkmaxdatetime ='@{activity('Load incremental vis Stored Proc').output.firstRow.MaxDate}', sourcestartdate ='@{activity('Load incremental vis Stored Proc').output.firstRow.MaxDate}',loadstatus = 'Succeeded' , rowsinserted = @{activity('Load incremental vis Stored Proc').output.firstRow.InsertCount}, rowsupdated = @{activity('Load incremental vis Stored Proc').output.firstRow.UpdateCount}, pipelinestarttime = '@{variables('pipelinestarttime')}', pipelineendtime = '@{variables('pipelineendtime')}'  where sourceschema = '@{pipeline().parameters.item.sourceschema}' and sourceobject = '@{pipeline().parameters.item.sourceobject}'",
                      "type": "Expression"
                    }
                  }
                ],
                "scriptBlockExecutionTimeout": "02:00:00"
              }
            }
          ],
          "ifTrueActivities": [
            {
              "name": "Copy data to warehouse",
              "type": "Copy",
              "dependsOn": [],
              "policy": {
                "timeout": "0.12:00:00",
                "retry": 0,
                "retryIntervalInSeconds": 30,
                "secureOutput": false,
                "secureInput": false
              },
              "typeProperties": {
                "source": {
                  "type": "DataWarehouseSource",
                  "queryTimeout": "02:00:00",
                  "partitionOption": "None",
                  "datasetSettings": {
                    "annotations": [],
                    "linkedService": {
                      "name": "dw_world_wide_importers",
                      "properties": {
                        "annotations": [],
                        "type": "DataWarehouse",
                        "typeProperties": {
                          "endpoint": "x6eps4xrq2xudenlfv6naeo3i4-7674mglzen3ebawzmfdtdextfy.msit-datawarehouse.fabric.microsoft.com",
                          "artifactId": "3304be96-1d91-45e8-abb7-09bd38609e21",
                          "workspaceId": "19c6bfff-2379-4076-82d9-61473192f32e"
                        }
                      }
                    },
                    "type": "DataWarehouseTable",
                    "schema": [],
                    "typeProperties": {
                      "schema": {
                        "value": "@pipeline().parameters.item.sourceschema",
                        "type": "Expression"
                      },
                      "table": {
                        "value": "@pipeline().parameters.item.sourceobject",
                        "type": "Expression"
                      }
                    }
                  }
                },
                "sink": {
                  "type": "DataWarehouseSink",
                  "preCopyScript": {
                    "value": "DROP TABLE IF EXISTS @{pipeline().parameters.item.sinkschema}.@{pipeline().parameters.item.sinktable}",
                    "type": "Expression"
                  },
                  "allowCopyCommand": true,
                  "copyCommandSettings": {},
                  "tableOption": "autoCreate",
                  "datasetSettings": {
                    "annotations": [],
                    "linkedService": {
                      "name": "dw_world_wide_importers",
                      "properties": {
                        "annotations": [],
                        "type": "DataWarehouse",
                        "typeProperties": {
                          "endpoint": "x6eps4xrq2xudenlfv6naeo3i4-7674mglzen3ebawzmfdtdextfy.msit-datawarehouse.fabric.microsoft.com",
                          "artifactId": "3304be96-1d91-45e8-abb7-09bd38609e21",
                          "workspaceId": "19c6bfff-2379-4076-82d9-61473192f32e"
                        }
                      }
                    },
                    "type": "DataWarehouseTable",
                    "schema": [],
                    "typeProperties": {
                      "schema": {
                        "value": "@pipeline().parameters.item.sinkschema",
                        "type": "Expression"
                      },
                      "table": {
                        "value": "@pipeline().parameters.item.sinktable",
                        "type": "Expression"
                      }
                    }
                  }
                },
                "enableStaging": true,
                "translator": {
                  "type": "TabularTranslator",
                  "typeConversion": true,
                  "typeConversionSettings": {
                    "allowDataTruncation": true,
                    "treatBooleanAsNumber": false
                  }
                }
              }
            },
            {
              "name": "Set pipelineendtime",
              "type": "SetVariable",
              "dependsOn": [
                {
                  "activity": "Copy data to warehouse",
                  "dependencyConditions": [
                    "Succeeded"
                  ]
                }
              ],
              "policy": {
                "secureOutput": false,
                "secureInput": false
              },
              "typeProperties": {
                "variableName": "pipelineendtime",
                "value": {
                  "value": "@utcnow()",
                  "type": "Expression"
                }
              }
            },
            {
              "name": "update pipeline run details",
              "type": "Script",
              "dependsOn": [
                {
                  "activity": "Set pipelineendtime",
                  "dependencyConditions": [
                    "Succeeded"
                  ]
                }
              ],
              "policy": {
                "timeout": "0.12:00:00",
                "retry": 2,
                "retryIntervalInSeconds": 30,
                "secureOutput": false,
                "secureInput": false
              },
              "linkedService": {
                "name": "dw_world_wide_importers",
                "objectId": "3304be96-1d91-45e8-abb7-09bd38609e21",
                "properties": {
                  "annotations": [],
                  "type": "DataWarehouse",
                  "typeProperties": {
                    "endpoint": "x6eps4xrq2xudenlfv6naeo3i4-7674mglzen3ebawzmfdtdextfy.msit-datawarehouse.fabric.microsoft.com",
                    "artifactId": "3304be96-1d91-45e8-abb7-09bd38609e21",
                    "workspaceId": "19c6bfff-2379-4076-82d9-61473192f32e"
                  }
                }
              },
              "typeProperties": {
                "scripts": [
                  {
                    "type": "NonQuery",
                    "text": {
                      "value": "UPDATE metadata.MirroredWWItoDW set batchloaddatetime = '@{pipeline().parameters.batchloaddatetime}', loadstatus = '@{activity('Copy data to warehouse').output.executionDetails[0].status}' , rowsinserted = @{string(activity('Copy data to warehouse').output.rowsCopied)}, rowsupdated = 0, pipelinestarttime = '@{variables('pipelinestarttime')}', pipelineendtime = '@{variables('pipelineendtime')}'  where sourceschema = '@{pipeline().parameters.item.sourceschema}' and sourceobject = '@{pipeline().parameters.item.sourceobject}'",
                      "type": "Expression"
                    }
                  }
                ],
                "scriptBlockExecutionTimeout": "02:00:00"
              }
            }
          ]
        }
      }
    ],
    "parameters": {
      "item": {
        "type": "object"
      },
      "batchloaddatetime": {
        "type": "string"
      }
    },
    "variables": {
      "pipelinestarttime": {
        "type": "String"
      },
      "pipelineendtime": {
        "type": "String"
      }
    }
  }
}